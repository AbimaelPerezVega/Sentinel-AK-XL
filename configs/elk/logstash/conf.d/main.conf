input {
  beats {
    port => 5044
    id   => "beats-wazuh"
  }
  http {
    host => "0.0.0.0"
    port => 8080
  }
}

filter {
  #########################################################
  # 1) Parse JSON if present in 'message' or 'event.original'
  #########################################################
  if [message] and [message] =~ '^\s*\{' {
    json {
      source => "message"
      # Keep keys at root; disable ECS to avoid warnings
      ecs_compatibility => disabled
    }
  } else if [event][original] and [event][original] =~ '^\s*\{' {
    json {
      source => "[event][original]"
      ecs_compatibility => disabled
    }
  }

  #########################################################
  # 2) Tag Wazuh events
  #########################################################
  if [agent][name] {
    mutate { add_field => { "source_type" => "wazuh" } }
  }

  #########################################################
  # 3) Use eventâ€™s own timestamp
  #########################################################
  if [timestamp] {
    date {
      match  => ["timestamp", "ISO8601"]
      target => "@timestamp"
    }
    mutate { remove_field => ["timestamp"] }
  }

  #########################################################
  # 4) Select first available source IP field
  #########################################################
  if ![event_src_ip] {
    if [data][srcip] {
      mutate { add_field => { "event_src_ip" => "%{[data][srcip]}" } }
    } else if [srcip] {
      mutate { add_field => { "event_src_ip" => "%{[srcip]}" } }
    } else if [client][ip] {
      mutate { add_field => { "event_src_ip" => "%{[client][ip]}" } }
    } else if [source][ip] {
      mutate { add_field => { "event_src_ip" => "%{[source][ip]}" } }
    }
  }

  #########################################################
  # 5) GEOIP (only if valid IPv4)
  #########################################################
  if [event_src_ip] and [event_src_ip] =~ /^(\d{1,3}\.){3}\d{1,3}$/ {
    geoip {
      source => "event_src_ip"
      target => "[geoip]"
      database => "/usr/share/logstash/geoip/GeoLite2-City.mmdb"
      ecs_compatibility => disabled
    }

    # Si no hubo _geoip_lookup_failure, aseguramos objeto {lon,lat}
    if !(" _geoip_lookup_failure " in [tags]) and [geoip][longitude] and [geoip][latitude] {
      mutate {
        copy => { "[geoip][longitude]" => "[geoip][location][lon]" }
        copy => { "[geoip][latitude]"  => "[geoip][location][lat]" }
      }
    }
  }

  # --- (Optional) Destination GEOIP (disabled) ---
  # ...
}

output {
   # stdout { codec => rubydebug }  # Useful for debugging if needed
  elasticsearch {
    hosts  => ["http://elasticsearch:9200"]
    index  => "sentinel-logs-%{+YYYY.MM.dd}"
    ilm_enabled => false
  }
}
